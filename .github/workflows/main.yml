---
name: Quality Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.0'
      - name: Install go-imports
        run: go install golang.org/x/tools/cmd/goimports@latest
      - name: Run code linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45.2
          args: -v
      - name: Execute unit tests
        run: make unit-test
      - name: Execute integration tests
        run: make integration-test

  tag-version:
    # Only triggered when running on main and successful quality check
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.create-tag.outputs.version }}
    needs: unit-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - id: checkout
        name: Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: create-tag
        name: Tag a new version
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          VERSION_TAG=`git describe --tags --abbrev=0 | awk -F. '{OFS="."; $NF+=1; print $0}'`
          git tag $VERSION_TAG -a -m "Automatic version increment on push"
          git push origin $VERSION_TAG
          echo "::set-output name=version::$VERSION_TAG"
